/*!
 * Font Awesome Free 6.7.1 by @fontawesome - https://fontawesome.com
 * License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License)
 * Copyright 2024 Fonticons, Inc.
 */
{
    function he(t, e, a) {
        (e = (t => "symbol" == typeof (t = ((t, e) => {
            if ("object" != typeof t || !t) return t;
            var a = t[Symbol.toPrimitive];
            if (void 0 === a) return ("string" === e ? String : Number)(t);
            if ("object" != typeof (a = a.call(t, e || "default"))) return a;
            throw new TypeError("@@toPrimitive must return a primitive value.");
        })(t, "string")) ? t : t + "")(e)) in t ? Object.defineProperty(t, e, {
            value: a,
            enumerable: !0,
            configurable: !0,
            writable: !0
        }) : t[e] = a;
    }
    function pe(e, t) {
        var a, n = Object.keys(e);
        return Object.getOwnPropertySymbols && (a = Object.getOwnPropertySymbols(e), 
        t && (a = a.filter(function(t) {
            return Object.getOwnPropertyDescriptor(e, t).enumerable;
        })), n.push.apply(n, a)), n;
    }
    function zt(e) {
        for (var t = 1; t < arguments.length; t++) {
            var a = null != arguments[t] ? arguments[t] : {};
            t % 2 ? pe(Object(a), !0).forEach(function(t) {
                he(e, t, a[t]);
            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(a)) : pe(Object(a)).forEach(function(t) {
                Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(a, t));
            });
        }
        return e;
    }
    let t = {}, e = {}, R = null, L = {
        mark: It = () => {},
        measure: It
    };
    try {
        "undefined" != typeof window && (t = window), "undefined" != typeof document && (e = document), 
        "undefined" != typeof MutationObserver && (R = MutationObserver), "undefined" != typeof performance && (L = performance);
    } catch (t) {}
    var {
        userAgent: It = ""
    } = t.navigator || {};
    let r = t, g = e, T = R;
    var Ft = L;
    let Y = !!r.document, f = !!g.documentElement && !!g.head && "function" == typeof g.addEventListener && "function" == typeof g.createElement, W = ~It.indexOf("MSIE") || ~It.indexOf("Trident/");
    var It = {
        classic: {
            fa: "solid",
            fas: "solid",
            "fa-solid": "solid",
            far: "regular",
            "fa-regular": "regular",
            fal: "light",
            "fa-light": "light",
            fat: "thin",
            "fa-thin": "thin",
            fab: "brands",
            "fa-brands": "brands"
        },
        duotone: {
            fa: "solid",
            fad: "solid",
            "fa-solid": "solid",
            "fa-duotone": "solid",
            fadr: "regular",
            "fa-regular": "regular",
            fadl: "light",
            "fa-light": "light",
            fadt: "thin",
            "fa-thin": "thin"
        },
        sharp: {
            fa: "solid",
            fass: "solid",
            "fa-solid": "solid",
            fasr: "regular",
            "fa-regular": "regular",
            fasl: "light",
            "fa-light": "light",
            fast: "thin",
            "fa-thin": "thin"
        },
        "sharp-duotone": {
            fa: "solid",
            fasds: "solid",
            "fa-solid": "solid",
            fasdr: "regular",
            "fa-regular": "regular",
            fasdl: "light",
            "fa-light": "light",
            fasdt: "thin",
            "fa-thin": "thin"
        }
    }, ge = [ "fa-classic", "fa-duotone", "fa-sharp", "fa-sharp-duotone" ], Dt = "classic", Rt = "duotone", be = [ Dt, Rt, "sharp", "sharp-duotone" ], ve = new Map([ [ "classic", {
        defaultShortPrefixId: "fas",
        defaultStyleId: "solid",
        styleIds: [ "solid", "regular", "light", "thin", "brands" ],
        futureStyleIds: [],
        defaultFontWeight: 900
    } ], [ "sharp", {
        defaultShortPrefixId: "fass",
        defaultStyleId: "solid",
        styleIds: [ "solid", "regular", "light", "thin" ],
        futureStyleIds: [],
        defaultFontWeight: 900
    } ], [ "duotone", {
        defaultShortPrefixId: "fad",
        defaultStyleId: "solid",
        styleIds: [ "solid", "regular", "light", "thin" ],
        futureStyleIds: [],
        defaultFontWeight: 900
    } ], [ "sharp-duotone", {
        defaultShortPrefixId: "fasds",
        defaultStyleId: "solid",
        styleIds: [ "solid", "regular", "light", "thin" ],
        futureStyleIds: [],
        defaultFontWeight: 900
    } ] ]), ye = [ "fak", "fa-kit", "fakd", "fa-kit-duotone" ], Lt = {
        fak: "kit",
        "fa-kit": "kit"
    }, Tt = {
        fakd: "kit-duotone",
        "fa-kit-duotone": "kit-duotone"
    }, xe = [ "fak", "fakd" ], ke = {
        kit: "fak"
    }, Yt = {
        "kit-duotone": "fakd"
    }, Wt = {
        GROUP: "duotone-group",
        SWAP_OPACITY: "swap-opacity",
        PRIMARY: "primary",
        SECONDARY: "secondary"
    }, we = [ "fak", "fa-kit", "fakd", "fa-kit-duotone" ], Ht = {
        classic: {
            fab: "fa-brands",
            fad: "fa-duotone",
            fal: "fa-light",
            far: "fa-regular",
            fas: "fa-solid",
            fat: "fa-thin"
        },
        duotone: {
            fadr: "fa-regular",
            fadl: "fa-light",
            fadt: "fa-thin"
        },
        sharp: {
            fass: "fa-solid",
            fasr: "fa-regular",
            fasl: "fa-light",
            fast: "fa-thin"
        },
        "sharp-duotone": {
            fasds: "fa-solid",
            fasdr: "fa-regular",
            fasdl: "fa-light",
            fasdt: "fa-thin"
        }
    }, _t = [ "fa", "fas", "far", "fal", "fat", "fad", "fadr", "fadl", "fadt", "fab", "fass", "fasr", "fasl", "fast", "fasds", "fasdr", "fasdl", "fasdt", "fa-classic", "fa-duotone", "fa-sharp", "fa-sharp-duotone", "fa-solid", "fa-regular", "fa-light", "fa-thin", "fa-duotone", "fa-brands" ], Ut = (Bt = [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 ]).concat([ 11, 12, 13, 14, 15, 16, 17, 18, 19, 20 ]), Wt = [ ...Object.keys({
        classic: [ "fas", "far", "fal", "fat", "fad" ],
        duotone: [ "fadr", "fadl", "fadt" ],
        sharp: [ "fass", "fasr", "fasl", "fast" ],
        "sharp-duotone": [ "fasds", "fasdr", "fasdl", "fasdt" ]
    }), "solid", "regular", "light", "thin", "duotone", "brands", "2xs", "xs", "sm", "lg", "xl", "2xl", "beat", "border", "fade", "beat-fade", "bounce", "flip-both", "flip-horizontal", "flip-vertical", "flip", "fw", "inverse", "layers-counter", "layers-text", "layers", "li", "pull-left", "pull-right", "pulse", "rotate-180", "rotate-270", "rotate-90", "rotate-by", "shake", "spin-pulse", "spin-reverse", "spin", "stack-1x", "stack-2x", "stack", "ul", Wt.GROUP, Wt.SWAP_OPACITY, Wt.PRIMARY, Wt.SECONDARY ].concat(Bt.map(t => "".concat(t, "x"))).concat(Ut.map(t => "w-".concat(t))), Bt = "___FONT_AWESOME___";
    let l = 16, H = "svg-inline--fa", b = "data-fa-i2svg", v = "data-fa-pseudo-element", _ = "data-fa-pseudo-element-pending", y = "data-prefix", x = "data-icon", U = "fontawesome-i2svg", B = "async", X = [ "HTML", "HEAD", "STYLE", "SCRIPT" ], c = (() => {
        try {
            return !1;
        } catch (t) {
            return !1;
        }
    })();
    function Xt(t) {
        return new Proxy(t, {
            get(t, e) {
                return e in t ? t[e] : t[Dt];
            }
        });
    }
    (Ut = zt({}, It))[Dt] = zt(zt(zt(zt({}, {
        "fa-duotone": "duotone"
    }), It[Dt]), Lt), Tt);
    let q = Xt(Ut), V = ((It = zt({}, {
        classic: {
            solid: "fas",
            regular: "far",
            light: "fal",
            thin: "fat",
            brands: "fab"
        },
        duotone: {
            solid: "fad",
            regular: "fadr",
            light: "fadl",
            thin: "fadt"
        },
        sharp: {
            solid: "fass",
            regular: "fasr",
            light: "fasl",
            thin: "fast"
        },
        "sharp-duotone": {
            solid: "fasds",
            regular: "fasdr",
            light: "fasdl",
            thin: "fasdt"
        }
    }))[Dt] = zt(zt(zt(zt({}, {
        duotone: "fad"
    }), It[Dt]), ke), Yt), Xt(It)), i = ((Lt = zt({}, Ht))[Dt] = zt(zt({}, Lt[Dt]), {
        fak: "fa-kit"
    }), Xt(Lt)), G = ((Tt = zt({}, {
        classic: {
            "fa-brands": "fab",
            "fa-duotone": "fad",
            "fa-light": "fal",
            "fa-regular": "far",
            "fa-solid": "fas",
            "fa-thin": "fat"
        },
        duotone: {
            "fa-regular": "fadr",
            "fa-light": "fadl",
            "fa-thin": "fadt"
        },
        sharp: {
            "fa-solid": "fass",
            "fa-regular": "fasr",
            "fa-light": "fasl",
            "fa-thin": "fast"
        },
        "sharp-duotone": {
            "fa-solid": "fasds",
            "fa-regular": "fasdr",
            "fa-light": "fasdl",
            "fa-thin": "fasdt"
        }
    }))[Dt] = zt(zt({}, Tt[Dt]), {
        "fa-kit": "fak"
    }), Xt(Tt), /fa(s|r|l|t|d|dr|dl|dt|b|k|kd|ss|sr|sl|st|sds|sdr|sdl|sdt)?[\-\ ]/), K = "fa-layers-text", J = /Font ?Awesome ?([56 ]*)(Solid|Regular|Light|Thin|Duotone|Brands|Free|Pro|Sharp Duotone|Sharp|Kit)?.*/i, Q = (Xt(zt({}, {
        classic: {
            900: "fas",
            400: "far",
            normal: "far",
            300: "fal",
            100: "fat"
        },
        duotone: {
            900: "fad",
            400: "fadr",
            300: "fadl",
            100: "fadt"
        },
        sharp: {
            900: "fass",
            400: "fasr",
            300: "fasl",
            100: "fast"
        },
        "sharp-duotone": {
            900: "fasds",
            400: "fasdr",
            300: "fasdl",
            100: "fasdt"
        }
    })), [ "class", "data-prefix", "data-icon", "data-fa-transform", "data-fa-mask" ]), o = {
        GROUP: "duotone-group",
        SWAP_OPACITY: "swap-opacity",
        PRIMARY: "primary",
        SECONDARY: "secondary"
    }, Z = [ "kit", ...Wt ], a = r.FontAwesomeConfig || {}, n = (g && "function" == typeof g.querySelector && [ [ "data-family-prefix", "familyPrefix" ], [ "data-css-prefix", "cssPrefix" ], [ "data-family-default", "familyDefault" ], [ "data-style-default", "styleDefault" ], [ "data-replacement-class", "replacementClass" ], [ "data-auto-replace-svg", "autoReplaceSvg" ], [ "data-auto-add-css", "autoAddCss" ], [ "data-auto-a11y", "autoA11y" ], [ "data-search-pseudo-elements", "searchPseudoElements" ], [ "data-observe-mutations", "observeMutations" ], [ "data-mutate-approach", "mutateApproach" ], [ "data-keep-original-source", "keepOriginalSource" ], [ "data-measure-performance", "measurePerformance" ], [ "data-show-missing-icons", "showMissingIcons" ] ].forEach(t => {
        var [ t, e ] = t, t = "" === (t = (t => {
            var e = g.querySelector("script[" + t + "]");
            if (e) return e.getAttribute(t);
        })(t)) || "false" !== t && ("true" === t || t);
        null != t && (a[e] = t);
    }), Ut = {
        styleDefault: "solid",
        familyDefault: Dt,
        cssPrefix: "fa",
        replacementClass: H,
        autoReplaceSvg: !0,
        autoAddCss: !0,
        autoA11y: !0,
        searchPseudoElements: !1,
        observeMutations: !0,
        mutateApproach: "async",
        keepOriginalSource: !0,
        measurePerformance: !1,
        showMissingIcons: !0
    }, a.familyPrefix && (a.cssPrefix = a.familyPrefix), zt(zt({}, Ut), a)), k = (n.autoReplaceSvg || (n.observeMutations = !1), 
    {}), s = (Object.keys(Ut).forEach(e => {
        Object.defineProperty(k, e, {
            enumerable: !0,
            set: function(t) {
                n[e] = t, s.forEach(t => t(k));
            },
            get: function() {
                return n[e];
            }
        });
    }), Object.defineProperty(k, "familyPrefix", {
        enumerable: !0,
        set: function(t) {
            n.cssPrefix = t, s.forEach(t => t(k));
        },
        get: function() {
            return n.cssPrefix;
        }
    }), r.FontAwesomeConfig = k, []), u = l, w = {
        size: 16,
        x: 0,
        y: 0,
        rotate: 0,
        flipX: !1,
        flipY: !1
    }, $ = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";
    function qt() {
        let t = 12, e = "";
        for (;0 < t--; ) e += $[62 * Math.random() | 0];
        return e;
    }
    function Vt(e) {
        var a = [];
        for (let t = (e || []).length >>> 0; t--; ) a[t] = e[t];
        return a;
    }
    function Gt(t) {
        return t.classList ? Vt(t.classList) : (t.getAttribute("class") || "").split(" ").filter(t => t);
    }
    function Ae(t) {
        return "".concat(t).replace(/&/g, "&amp;").replace(/"/g, "&quot;").replace(/'/g, "&#39;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
    }
    function Kt(a) {
        return Object.keys(a || {}).reduce((t, e) => t + "".concat(e, ": ").concat(a[e].trim(), ";"), "");
    }
    function Jt(t) {
        return t.size !== w.size || t.x !== w.x || t.y !== w.y || t.rotate !== w.rotate || t.flipX || t.flipY;
    }
    function Pe() {
        var t, e, a = H, n = k.cssPrefix, r = k.replacementClass;
        let i = ':root, :host {\n  --fa-font-solid: normal 900 1em/1 "Font Awesome 6 Free";\n  --fa-font-regular: normal 400 1em/1 "Font Awesome 6 Free";\n  --fa-font-light: normal 300 1em/1 "Font Awesome 6 Pro";\n  --fa-font-thin: normal 100 1em/1 "Font Awesome 6 Pro";\n  --fa-font-duotone: normal 900 1em/1 "Font Awesome 6 Duotone";\n  --fa-font-duotone-regular: normal 400 1em/1 "Font Awesome 6 Duotone";\n  --fa-font-duotone-light: normal 300 1em/1 "Font Awesome 6 Duotone";\n  --fa-font-duotone-thin: normal 100 1em/1 "Font Awesome 6 Duotone";\n  --fa-font-brands: normal 400 1em/1 "Font Awesome 6 Brands";\n  --fa-font-sharp-solid: normal 900 1em/1 "Font Awesome 6 Sharp";\n  --fa-font-sharp-regular: normal 400 1em/1 "Font Awesome 6 Sharp";\n  --fa-font-sharp-light: normal 300 1em/1 "Font Awesome 6 Sharp";\n  --fa-font-sharp-thin: normal 100 1em/1 "Font Awesome 6 Sharp";\n  --fa-font-sharp-duotone-solid: normal 900 1em/1 "Font Awesome 6 Sharp Duotone";\n  --fa-font-sharp-duotone-regular: normal 400 1em/1 "Font Awesome 6 Sharp Duotone";\n  --fa-font-sharp-duotone-light: normal 300 1em/1 "Font Awesome 6 Sharp Duotone";\n  --fa-font-sharp-duotone-thin: normal 100 1em/1 "Font Awesome 6 Sharp Duotone";\n}\n\nsvg:not(:root).svg-inline--fa, svg:not(:host).svg-inline--fa {\n  overflow: visible;\n  box-sizing: content-box;\n}\n\n.svg-inline--fa {\n  display: var(--fa-display, inline-block);\n  height: 1em;\n  overflow: visible;\n  vertical-align: -0.125em;\n}\n.svg-inline--fa.fa-2xs {\n  vertical-align: 0.1em;\n}\n.svg-inline--fa.fa-xs {\n  vertical-align: 0em;\n}\n.svg-inline--fa.fa-sm {\n  vertical-align: -0.0714285705em;\n}\n.svg-inline--fa.fa-lg {\n  vertical-align: -0.2em;\n}\n.svg-inline--fa.fa-xl {\n  vertical-align: -0.25em;\n}\n.svg-inline--fa.fa-2xl {\n  vertical-align: -0.3125em;\n}\n.svg-inline--fa.fa-pull-left {\n  margin-right: var(--fa-pull-margin, 0.3em);\n  width: auto;\n}\n.svg-inline--fa.fa-pull-right {\n  margin-left: var(--fa-pull-margin, 0.3em);\n  width: auto;\n}\n.svg-inline--fa.fa-li {\n  width: var(--fa-li-width, 2em);\n  top: 0.25em;\n}\n.svg-inline--fa.fa-fw {\n  width: var(--fa-fw-width, 1.25em);\n}\n\n.fa-layers svg.svg-inline--fa {\n  bottom: 0;\n  left: 0;\n  margin: auto;\n  position: absolute;\n  right: 0;\n  top: 0;\n}\n\n.fa-layers-counter, .fa-layers-text {\n  display: inline-block;\n  position: absolute;\n  text-align: center;\n}\n\n.fa-layers {\n  display: inline-block;\n  height: 1em;\n  position: relative;\n  text-align: center;\n  vertical-align: -0.125em;\n  width: 1em;\n}\n.fa-layers svg.svg-inline--fa {\n  transform-origin: center center;\n}\n\n.fa-layers-text {\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  transform-origin: center center;\n}\n\n.fa-layers-counter {\n  background-color: var(--fa-counter-background-color, #ff253a);\n  border-radius: var(--fa-counter-border-radius, 1em);\n  box-sizing: border-box;\n  color: var(--fa-inverse, #fff);\n  line-height: var(--fa-counter-line-height, 1);\n  max-width: var(--fa-counter-max-width, 5em);\n  min-width: var(--fa-counter-min-width, 1.5em);\n  overflow: hidden;\n  padding: var(--fa-counter-padding, 0.25em 0.5em);\n  right: var(--fa-right, 0);\n  text-overflow: ellipsis;\n  top: var(--fa-top, 0);\n  transform: scale(var(--fa-counter-scale, 0.25));\n  transform-origin: top right;\n}\n\n.fa-layers-bottom-right {\n  bottom: var(--fa-bottom, 0);\n  right: var(--fa-right, 0);\n  top: auto;\n  transform: scale(var(--fa-layers-scale, 0.25));\n  transform-origin: bottom right;\n}\n\n.fa-layers-bottom-left {\n  bottom: var(--fa-bottom, 0);\n  left: var(--fa-left, 0);\n  right: auto;\n  top: auto;\n  transform: scale(var(--fa-layers-scale, 0.25));\n  transform-origin: bottom left;\n}\n\n.fa-layers-top-right {\n  top: var(--fa-top, 0);\n  right: var(--fa-right, 0);\n  transform: scale(var(--fa-layers-scale, 0.25));\n  transform-origin: top right;\n}\n\n.fa-layers-top-left {\n  left: var(--fa-left, 0);\n  right: auto;\n  top: var(--fa-top, 0);\n  transform: scale(var(--fa-layers-scale, 0.25));\n  transform-origin: top left;\n}\n\n.fa-1x {\n  font-size: 1em;\n}\n\n.fa-2x {\n  font-size: 2em;\n}\n\n.fa-3x {\n  font-size: 3em;\n}\n\n.fa-4x {\n  font-size: 4em;\n}\n\n.fa-5x {\n  font-size: 5em;\n}\n\n.fa-6x {\n  font-size: 6em;\n}\n\n.fa-7x {\n  font-size: 7em;\n}\n\n.fa-8x {\n  font-size: 8em;\n}\n\n.fa-9x {\n  font-size: 9em;\n}\n\n.fa-10x {\n  font-size: 10em;\n}\n\n.fa-2xs {\n  font-size: 0.625em;\n  line-height: 0.1em;\n  vertical-align: 0.225em;\n}\n\n.fa-xs {\n  font-size: 0.75em;\n  line-height: 0.0833333337em;\n  vertical-align: 0.125em;\n}\n\n.fa-sm {\n  font-size: 0.875em;\n  line-height: 0.0714285718em;\n  vertical-align: 0.0535714295em;\n}\n\n.fa-lg {\n  font-size: 1.25em;\n  line-height: 0.05em;\n  vertical-align: -0.075em;\n}\n\n.fa-xl {\n  font-size: 1.5em;\n  line-height: 0.0416666682em;\n  vertical-align: -0.125em;\n}\n\n.fa-2xl {\n  font-size: 2em;\n  line-height: 0.03125em;\n  vertical-align: -0.1875em;\n}\n\n.fa-fw {\n  text-align: center;\n  width: 1.25em;\n}\n\n.fa-ul {\n  list-style-type: none;\n  margin-left: var(--fa-li-margin, 2.5em);\n  padding-left: 0;\n}\n.fa-ul > li {\n  position: relative;\n}\n\n.fa-li {\n  left: calc(-1 * var(--fa-li-width, 2em));\n  position: absolute;\n  text-align: center;\n  width: var(--fa-li-width, 2em);\n  line-height: inherit;\n}\n\n.fa-border {\n  border-color: var(--fa-border-color, #eee);\n  border-radius: var(--fa-border-radius, 0.1em);\n  border-style: var(--fa-border-style, solid);\n  border-width: var(--fa-border-width, 0.08em);\n  padding: var(--fa-border-padding, 0.2em 0.25em 0.15em);\n}\n\n.fa-pull-left {\n  float: left;\n  margin-right: var(--fa-pull-margin, 0.3em);\n}\n\n.fa-pull-right {\n  float: right;\n  margin-left: var(--fa-pull-margin, 0.3em);\n}\n\n.fa-beat {\n  animation-name: fa-beat;\n  animation-delay: var(--fa-animation-delay, 0s);\n  animation-direction: var(--fa-animation-direction, normal);\n  animation-duration: var(--fa-animation-duration, 1s);\n  animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n  animation-timing-function: var(--fa-animation-timing, ease-in-out);\n}\n\n.fa-bounce {\n  animation-name: fa-bounce;\n  animation-delay: var(--fa-animation-delay, 0s);\n  animation-direction: var(--fa-animation-direction, normal);\n  animation-duration: var(--fa-animation-duration, 1s);\n  animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n  animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.28, 0.84, 0.42, 1));\n}\n\n.fa-fade {\n  animation-name: fa-fade;\n  animation-delay: var(--fa-animation-delay, 0s);\n  animation-direction: var(--fa-animation-direction, normal);\n  animation-duration: var(--fa-animation-duration, 1s);\n  animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n  animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.4, 0, 0.6, 1));\n}\n\n.fa-beat-fade {\n  animation-name: fa-beat-fade;\n  animation-delay: var(--fa-animation-delay, 0s);\n  animation-direction: var(--fa-animation-direction, normal);\n  animation-duration: var(--fa-animation-duration, 1s);\n  animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n  animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.4, 0, 0.6, 1));\n}\n\n.fa-flip {\n  animation-name: fa-flip;\n  animation-delay: var(--fa-animation-delay, 0s);\n  animation-direction: var(--fa-animation-direction, normal);\n  animation-duration: var(--fa-animation-duration, 1s);\n  animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n  animation-timing-function: var(--fa-animation-timing, ease-in-out);\n}\n\n.fa-shake {\n  animation-name: fa-shake;\n  animation-delay: var(--fa-animation-delay, 0s);\n  animation-direction: var(--fa-animation-direction, normal);\n  animation-duration: var(--fa-animation-duration, 1s);\n  animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n  animation-timing-function: var(--fa-animation-timing, linear);\n}\n\n.fa-spin {\n  animation-name: fa-spin;\n  animation-delay: var(--fa-animation-delay, 0s);\n  animation-direction: var(--fa-animation-direction, normal);\n  animation-duration: var(--fa-animation-duration, 2s);\n  animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n  animation-timing-function: var(--fa-animation-timing, linear);\n}\n\n.fa-spin-reverse {\n  --fa-animation-direction: reverse;\n}\n\n.fa-pulse,\n.fa-spin-pulse {\n  animation-name: fa-spin;\n  animation-direction: var(--fa-animation-direction, normal);\n  animation-duration: var(--fa-animation-duration, 1s);\n  animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n  animation-timing-function: var(--fa-animation-timing, steps(8));\n}\n\n@media (prefers-reduced-motion: reduce) {\n  .fa-beat,\n.fa-bounce,\n.fa-fade,\n.fa-beat-fade,\n.fa-flip,\n.fa-pulse,\n.fa-shake,\n.fa-spin,\n.fa-spin-pulse {\n    animation-delay: -1ms;\n    animation-duration: 1ms;\n    animation-iteration-count: 1;\n    transition-delay: 0s;\n    transition-duration: 0s;\n  }\n}\n@keyframes fa-beat {\n  0%, 90% {\n    transform: scale(1);\n  }\n  45% {\n    transform: scale(var(--fa-beat-scale, 1.25));\n  }\n}\n@keyframes fa-bounce {\n  0% {\n    transform: scale(1, 1) translateY(0);\n  }\n  10% {\n    transform: scale(var(--fa-bounce-start-scale-x, 1.1), var(--fa-bounce-start-scale-y, 0.9)) translateY(0);\n  }\n  30% {\n    transform: scale(var(--fa-bounce-jump-scale-x, 0.9), var(--fa-bounce-jump-scale-y, 1.1)) translateY(var(--fa-bounce-height, -0.5em));\n  }\n  50% {\n    transform: scale(var(--fa-bounce-land-scale-x, 1.05), var(--fa-bounce-land-scale-y, 0.95)) translateY(0);\n  }\n  57% {\n    transform: scale(1, 1) translateY(var(--fa-bounce-rebound, -0.125em));\n  }\n  64% {\n    transform: scale(1, 1) translateY(0);\n  }\n  100% {\n    transform: scale(1, 1) translateY(0);\n  }\n}\n@keyframes fa-fade {\n  50% {\n    opacity: var(--fa-fade-opacity, 0.4);\n  }\n}\n@keyframes fa-beat-fade {\n  0%, 100% {\n    opacity: var(--fa-beat-fade-opacity, 0.4);\n    transform: scale(1);\n  }\n  50% {\n    opacity: 1;\n    transform: scale(var(--fa-beat-fade-scale, 1.125));\n  }\n}\n@keyframes fa-flip {\n  50% {\n    transform: rotate3d(var(--fa-flip-x, 0), var(--fa-flip-y, 1), var(--fa-flip-z, 0), var(--fa-flip-angle, -180deg));\n  }\n}\n@keyframes fa-shake {\n  0% {\n    transform: rotate(-15deg);\n  }\n  4% {\n    transform: rotate(15deg);\n  }\n  8%, 24% {\n    transform: rotate(-18deg);\n  }\n  12%, 28% {\n    transform: rotate(18deg);\n  }\n  16% {\n    transform: rotate(-22deg);\n  }\n  20% {\n    transform: rotate(22deg);\n  }\n  32% {\n    transform: rotate(-12deg);\n  }\n  36% {\n    transform: rotate(12deg);\n  }\n  40%, 100% {\n    transform: rotate(0deg);\n  }\n}\n@keyframes fa-spin {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n.fa-rotate-90 {\n  transform: rotate(90deg);\n}\n\n.fa-rotate-180 {\n  transform: rotate(180deg);\n}\n\n.fa-rotate-270 {\n  transform: rotate(270deg);\n}\n\n.fa-flip-horizontal {\n  transform: scale(-1, 1);\n}\n\n.fa-flip-vertical {\n  transform: scale(1, -1);\n}\n\n.fa-flip-both,\n.fa-flip-horizontal.fa-flip-vertical {\n  transform: scale(-1, -1);\n}\n\n.fa-rotate-by {\n  transform: rotate(var(--fa-rotate-angle, 0));\n}\n\n.fa-stack {\n  display: inline-block;\n  vertical-align: middle;\n  height: 2em;\n  position: relative;\n  width: 2.5em;\n}\n\n.fa-stack-1x,\n.fa-stack-2x {\n  bottom: 0;\n  left: 0;\n  margin: auto;\n  position: absolute;\n  right: 0;\n  top: 0;\n  z-index: var(--fa-stack-z-index, auto);\n}\n\n.svg-inline--fa.fa-stack-1x {\n  height: 1em;\n  width: 1.25em;\n}\n.svg-inline--fa.fa-stack-2x {\n  height: 2em;\n  width: 2.5em;\n}\n\n.fa-inverse {\n  color: var(--fa-inverse, #fff);\n}\n\n.sr-only,\n.fa-sr-only {\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  margin: -1px;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  border-width: 0;\n}\n\n.sr-only-focusable:not(:focus),\n.fa-sr-only-focusable:not(:focus) {\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  margin: -1px;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  border-width: 0;\n}\n\n.svg-inline--fa .fa-primary {\n  fill: var(--fa-primary-color, currentColor);\n  opacity: var(--fa-primary-opacity, 1);\n}\n\n.svg-inline--fa .fa-secondary {\n  fill: var(--fa-secondary-color, currentColor);\n  opacity: var(--fa-secondary-opacity, 0.4);\n}\n\n.svg-inline--fa.fa-swap-opacity .fa-primary {\n  opacity: var(--fa-secondary-opacity, 0.4);\n}\n\n.svg-inline--fa.fa-swap-opacity .fa-secondary {\n  opacity: var(--fa-primary-opacity, 1);\n}\n\n.svg-inline--fa mask .fa-primary,\n.svg-inline--fa mask .fa-secondary {\n  fill: black;\n}';
        return "fa" === n && r === a || (t = new RegExp("\\.".concat("fa", "\\-"), "g"), 
        e = new RegExp("\\--".concat("fa", "\\-"), "g"), a = new RegExp("\\.".concat(a), "g"), 
        i = i.replace(t, ".".concat(n, "-")).replace(e, "--".concat(n, "-")).replace(a, ".".concat(r))), 
        i;
    }
    let tt = !1;
    function Qt() {
        if (k.autoAddCss && !tt) {
            var t = Pe();
            if (t && f) {
                var a = g.createElement("style"), n = (a.setAttribute("type", "text/css"), 
                a.innerHTML = t, g.head.childNodes);
                let e = null;
                for (let t = n.length - 1; -1 < t; t--) {
                    var r = n[t], i = (r.tagName || "").toUpperCase();
                    -1 < [ "STYLE", "LINK" ].indexOf(i) && (e = r);
                }
                g.head.insertBefore(a, e);
            }
            tt = !0;
        }
    }
    var ke = {
        mixout() {
            return {
                dom: {
                    css: Pe,
                    insertCss: Qt
                }
            };
        },
        hooks() {
            return {
                beforeDOMElementCreation() {
                    Qt();
                },
                beforeI2svg() {
                    Qt();
                }
            };
        }
    }, Zt = ((Yt = r || {})[Bt] || (Yt[Bt] = {}), Yt[Bt].styles || (Yt[Bt].styles = {}), 
    Yt[Bt].hooks || (Yt[Bt].hooks = {}), Yt[Bt].shims || (Yt[Bt].shims = []), Yt[Bt]);
    function Oe() {
        g.removeEventListener("DOMContentLoaded", Oe), d = 1, et.map(t => t());
    }
    let et = [], d = !1;
    function Ne(t) {
        f && (d ? setTimeout(t, 0) : et.push(t));
    }
    function $t(t) {
        var a, {
            tag: e,
            attributes: n = {},
            children: r = []
        } = t;
        return "string" == typeof t ? Ae(t) : "<".concat(e, " ").concat((a = n, 
        Object.keys(a || {}).reduce((t, e) => t + "".concat(e, '="').concat(Ae(a[e]), '" '), "").trim()), ">").concat(r.map($t).join(""), "</").concat(e, ">");
    }
    function Se(t, e, a) {
        if (t && t[e] && t[e][a]) return {
            prefix: e,
            iconName: a,
            icon: t[e][a]
        };
    }
    function te(t, e, a, n) {
        for (var r, i, o = Object.keys(t), s = o.length, l = void 0 !== n ? Ce(e, n) : e, f = void 0 === a ? (r = 1, 
        t[o[0]]) : (r = 0, a); r < s; r++) f = l(f, t[i = o[r]], i, t);
        return f;
    }
    f && !(d = (g.documentElement.doScroll ? /^loaded|^c/ : /^loaded|^i|^c/).test(g.readyState)) && g.addEventListener("DOMContentLoaded", Oe);
    var Ce = function(r, i) {
        return function(t, e, a, n) {
            return r.call(i, t, e, a, n);
        };
    };
    function Ee(t) {
        t = (t => {
            var e = [];
            let a = 0;
            for (var n = t.length; a < n; ) {
                var r, i = t.charCodeAt(a++);
                55296 <= i && i <= 56319 && a < n ? 56320 == (64512 & (r = t.charCodeAt(a++))) ? e.push(((1023 & i) << 10) + (1023 & r) + 65536) : (e.push(i), 
                a--) : e.push(i);
            }
            return e;
        })(t);
        return 1 === t.length ? t[0].toString(16) : null;
    }
    function Me(n) {
        return Object.keys(n).reduce((t, e) => {
            var a = n[e];
            return !!a.icon ? t[a.iconName] = a.icon : t[e] = a, t;
        }, {});
    }
    function ee(t, e, a) {
        var {
            skipHooks: a = !1
        } = 2 < arguments.length && void 0 !== a ? a : {}, n = Me(e);
        "function" != typeof Zt.hooks.addPack || a ? Zt.styles[t] = zt(zt({}, Zt.styles[t] || {}), n) : Zt.hooks.addPack(t, Me(e)), 
        "fas" === t && ee("fa", e);
    }
    let {
        styles: m,
        shims: at
    } = Zt, nt = Object.keys(i), rt = nt.reduce((t, e) => (t[e] = Object.keys(i[e]), 
    t), {}), h = null, it = {}, ot = {}, st = {}, lt = {}, ft = {};
    function je(t, e) {
        var e = e.split("-"), a = e[0], e = e.slice(1).join("-");
        return a !== t || "" === e || (a = e, ~Z.indexOf(a)) ? null : e;
    }
    let p = () => {
        var t = n => te(m, (t, e, a) => (t[a] = te(e, n, {}), t), {});
        it = t((e, t, a) => (t[3] && (e[t[3]] = a), t[2] && t[2].filter(t => "number" == typeof t).forEach(t => {
            e[t.toString(16)] = a;
        }), e)), ot = t((e, t, a) => (e[a] = a, t[2] && t[2].filter(t => "string" == typeof t).forEach(t => {
            e[t] = a;
        }), e)), ft = t((e, t, a) => {
            t = t[2];
            return e[a] = a, t.forEach(t => {
                e[t] = a;
            }), e;
        });
        let r = "far" in m || k.autoFetchSvg;
        t = te(at, (t, e) => {
            var a = e[0];
            let n = e[1];
            e = e[2];
            return "far" !== n || r || (n = "fas"), "string" == typeof a && (t.names[a] = {
                prefix: n,
                iconName: e
            }), "number" == typeof a && (t.unicodes[a.toString(16)] = {
                prefix: n,
                iconName: e
            }), t;
        }, {
            names: {},
            unicodes: {}
        });
        st = t.names, lt = t.unicodes, h = re(k.styleDefault, {
            family: k.familyDefault
        });
    };
    function ae(t, e) {
        return (it[t] || {})[e];
    }
    function ne(t, e) {
        return (ft[t] || {})[e];
    }
    function ze(t) {
        return st[t] || {
            prefix: null,
            iconName: null
        };
    }
    It = t => {
        h = re(t.styleDefault, {
            family: k.familyDefault
        });
    }, s.push(It), p();
    let ct = () => ({
        prefix: null,
        iconName: null,
        rest: []
    });
    function re(t, e) {
        var {
            family: e = Dt
        } = 1 < arguments.length && void 0 !== e ? e : {}, a = q[e][t];
        return e !== Rt || t ? (e = V[e][t] || V[e][a], a = t in Zt.styles ? t : null, 
        e || a || null) : "fad";
    }
    function Ie(t) {
        return t.sort().filter((t, e, a) => a.indexOf(t) === e);
    }
    function ie(t, e) {
        var {
            skipLookups: e = !1
        } = 1 < arguments.length && void 0 !== e ? e : {};
        let a = null, n = _t.concat(we);
        var r = Ie(t.filter(t => n.includes(t))), i = Ie(t.filter(t => !_t.includes(t))), [ o = null ] = r.filter(t => (a = t, 
        !ge.includes(t))), r = (t => {
            let a = Dt, n = nt.reduce((t, e) => (t[e] = "".concat(k.cssPrefix, "-").concat(e), 
            t), {});
            return be.forEach(e => {
                (t.includes(n[e]) || t.some(t => rt[e].includes(t))) && (a = e);
            }), a;
        })(r), i = zt(zt({}, (t => {
            let a = [], n = null;
            return t.forEach(t => {
                var e = je(k.cssPrefix, t);
                e ? n = e : t && a.push(t);
            }), {
                iconName: n,
                rest: a
            };
        })(i)), {}, {
            prefix: re(o, {
                family: r
            })
        });
        return zt(zt(zt({}, i), (t => {
            var {
                values: t,
                family: e,
                canonical: a,
                givenPrefix: n = "",
                styles: r = {},
                config: i = {}
            } = t, o = e === Rt, s = t.includes("fa-duotone") || t.includes("fad"), l = "duotone" === i.familyDefault, f = "fad" === a.prefix || "fa-duotone" === a.prefix;
            return !o && (s || l || f) && (a.prefix = "fad"), (t.includes("fa-brands") || t.includes("fab")) && (a.prefix = "fab"), 
            !a.prefix && ut.includes(e) && (Object.keys(r).find(t => dt.includes(t)) || i.autoFetchSvg) && (o = ve.get(e).defaultShortPrefixId, 
            a.prefix = o, a.iconName = ne(a.prefix, a.iconName) || a.iconName), 
            "fa" !== a.prefix && "fa" !== n || (a.prefix = h || "fas"), a;
        })({
            values: t,
            family: r,
            styles: m,
            config: k,
            canonical: i,
            givenPrefix: a
        })), ((t, e, a) => {
            let {
                prefix: n,
                iconName: r
            } = a;
            return !t && n && r && (a = "fa" === e ? ze(r) : {}, t = ne(n, r), r = a.iconName || t || r, 
            "far" !== (n = a.prefix || n) || m.far || !m.fas || k.autoFetchSvg || (n = "fas")), 
            {
                prefix: n,
                iconName: r
            };
        })(e, a, i));
    }
    let ut = be.filter(t => t !== Dt || t !== Rt), dt = Object.keys(Ht).filter(t => t !== Dt).map(t => Object.keys(Ht[t])).flat(), mt = [], A = {}, P = {}, ht = Object.keys(P);
    function oe(t, e) {
        for (var a = arguments.length, n = new Array(2 < a ? a - 2 : 0), r = 2; r < a; r++) n[r - 2] = arguments[r];
        return (A[t] || []).forEach(t => {
            e = t.apply(null, [ e, ...n ]);
        }), e;
    }
    function se(t) {
        for (var e = arguments.length, a = new Array(1 < e ? e - 1 : 0), n = 1; n < e; n++) a[n - 1] = arguments[n];
        (A[t] || []).forEach(t => {
            t.apply(null, a);
        });
    }
    function le(t) {
        var e = Array.prototype.slice.call(arguments, 1);
        return P[t] ? P[t].apply(null, e) : void 0;
    }
    function fe(t) {
        "fa" === t.prefix && (t.prefix = "fas");
        var e = t.iconName, t = t.prefix || h;
        if (e) return e = ne(t, e) || e, Se(pt.definitions, t, e) || Se(Zt.styles, t, e);
    }
    let pt = new class {
        constructor() {
            this.definitions = {};
        }
        add() {
            for (var t = arguments.length, e = new Array(t), a = 0; a < t; a++) e[a] = arguments[a];
            let n = e.reduce(this._pullDefinitions, {});
            Object.keys(n).forEach(t => {
                this.definitions[t] = zt(zt({}, this.definitions[t] || {}), n[t]), 
                ee(t, n[t]);
                var e = i[Dt][t];
                e && ee(e, n[t]), p();
            });
        }
        reset() {
            this.definitions = {};
        }
        _pullDefinitions(r, t) {
            let i = t.prefix && t.iconName && t.icon ? {
                0: t
            } : t;
            return Object.keys(i).map(t => {
                let {
                    prefix: e,
                    iconName: a,
                    icon: n
                } = i[t];
                t = n[2];
                r[e] || (r[e] = {}), 0 < t.length && t.forEach(t => {
                    "string" == typeof t && (r[e][t] = n);
                }), r[e][a] = n;
            }), r;
        }
    }(), O = {
        noAuto: () => {
            k.autoReplaceSvg = !1, k.observeMutations = !1, se("noAuto");
        },
        config: k,
        dom: {
            i2svg: function() {
                var t = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : {};
                return f ? (se("beforeI2svg", t), le("pseudoElements2svg", t), le("i2svg", t)) : Promise.reject(new Error("Operation requires a DOM of some kind."));
            },
            watch: function() {
                let t = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : {}, e = t.autoReplaceSvgRoot;
                !1 === k.autoReplaceSvg && (k.autoReplaceSvg = !0), k.observeMutations = !0, 
                Ne(() => {
                    N({
                        autoReplaceSvgRoot: e
                    }), se("watch", t);
                });
            }
        },
        parse: {
            icon: t => {
                var e, a;
                return null === t ? null : "object" == typeof t && t.prefix && t.iconName ? {
                    prefix: t.prefix,
                    iconName: ne(t.prefix, t.iconName) || t.iconName
                } : Array.isArray(t) && 2 === t.length ? (e = 0 === t[1].indexOf("fa-") ? t[1].slice(3) : t[1], 
                {
                    prefix: a = re(t[0]),
                    iconName: ne(a, e) || e
                }) : "string" == typeof t && (-1 < t.indexOf("".concat(k.cssPrefix, "-")) || t.match(G)) ? {
                    prefix: (a = ie(t.split(" "), {
                        skipLookups: !0
                    })).prefix || h,
                    iconName: ne(a.prefix, a.iconName) || a.iconName
                } : "string" == typeof t ? {
                    prefix: h,
                    iconName: ne(h, t) || t
                } : void 0;
            }
        },
        library: pt,
        findIconDefinition: fe,
        toHtml: $t
    }, N = function() {
        var t = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : {}, {
            autoReplaceSvgRoot: t = g
        } = t;
        (0 < Object.keys(Zt.styles).length || k.autoFetchSvg) && f && k.autoReplaceSvg && O.dom.i2svg({
            node: t
        });
    };
    function ce(e, t) {
        return Object.defineProperty(e, "abstract", {
            get: t
        }), Object.defineProperty(e, "html", {
            get: function() {
                return e.abstract.map(t => $t(t));
            }
        }), Object.defineProperty(e, "node", {
            get: function() {
                var t;
                if (f) return (t = g.createElement("div")).innerHTML = e.html, t.children;
            }
        }), e;
    }
    function ue(t) {
        let {
            icons: {
                main: e,
                mask: a
            },
            prefix: n,
            iconName: r,
            transform: i,
            symbol: o,
            title: s,
            maskId: l,
            titleId: f,
            extra: c,
            watchable: u = !1
        } = t;
        var d, m, {
            width: t,
            height: h
        } = a.found ? a : e, p = xe.includes(n), g = [ k.replacementClass, r ? "".concat(k.cssPrefix, "-").concat(r) : "" ].filter(t => -1 === c.classes.indexOf(t)).filter(t => "" !== t || !!t).concat(c.classes).join(" "), g = {
            children: [],
            attributes: zt(zt({}, c.attributes), {}, {
                "data-prefix": n,
                "data-icon": r,
                class: g,
                role: c.attributes.role || "img",
                xmlns: "http://www.w3.org/2000/svg",
                viewBox: "0 0 ".concat(t, " ").concat(h)
            })
        }, p = p && !~c.classes.indexOf("fa-fw") ? {
            width: "".concat(t / h * 16 * .0625, "em")
        } : {}, t = (u && (g.attributes[b] = ""), s && (g.children.push({
            tag: "title",
            attributes: {
                id: g.attributes["aria-labelledby"] || "title-".concat(f || qt())
            },
            children: [ s ]
        }), delete g.attributes.title), zt(zt({}, g), {}, {
            prefix: n,
            iconName: r,
            main: e,
            mask: a,
            maskId: l,
            transform: i,
            symbol: o,
            styles: zt(zt({}, p), c.styles)
        })), {
            children: h,
            attributes: g
        } = a.found && e.found ? le("generateAbstractMask", t) || {
            children: [],
            attributes: {}
        } : le("generateAbstractIcon", t) || {
            children: [],
            attributes: {}
        };
        return t.children = h, t.attributes = g, o ? ({
            prefix: p,
            iconName: h,
            children: g,
            attributes: m,
            symbol: d
        } = p = t, p = !0 === d ? "".concat(p, "-").concat(k.cssPrefix, "-").concat(h) : d, 
        [ {
            tag: "svg",
            attributes: {
                style: "display: none;"
            },
            children: [ {
                tag: "symbol",
                attributes: zt(zt({}, m), {}, {
                    id: p
                }),
                children: g
            } ]
        } ]) : ({
            children: h,
            main: d,
            mask: m,
            attributes: p,
            styles: g,
            transform: t
        } = h = t, Jt(t) && d.found && !m.found && ({
            width: m,
            height: d
        } = d, m = {
            x: m / d / 2,
            y: .5
        }, p.style = Kt(zt(zt({}, g), {}, {
            "transform-origin": "".concat(m.x + t.x / 16, "em ").concat(m.y + t.y / 16, "em")
        }))), [ {
            tag: "svg",
            attributes: p,
            children: h
        } ]);
    }
    function Fe(t) {
        var {
            content: t,
            width: e,
            height: a,
            transform: n,
            title: r,
            extra: i,
            watchable: o = !1
        } = t, s = zt(zt(zt({}, i.attributes), r ? {
            title: r
        } : {}), {}, {
            class: i.classes.join(" ")
        }), o = (o && (s[b] = ""), zt({}, i.styles)), i = (Jt(n) && (o.transform = (t => {
            var {
                transform: t,
                width: e = l,
                height: a = l,
                startCentered: n = !1
            } = t;
            let r = "";
            return n && W ? r += "translate(".concat(t.x / u - e / 2, "em, ").concat(t.y / u - a / 2, "em) ") : r += n ? "translate(calc(-50% + ".concat(t.x / u, "em), calc(-50% + ").concat(t.y / u, "em)) ") : "translate(".concat(t.x / u, "em, ").concat(t.y / u, "em) "), 
            r = (r += "scale(".concat(t.size / u * (t.flipX ? -1 : 1), ", ").concat(t.size / u * (t.flipY ? -1 : 1), ") ")) + "rotate(".concat(t.rotate, "deg) ");
        })({
            transform: n,
            startCentered: !0,
            width: e,
            height: a
        }), o["-webkit-transform"] = o.transform), Kt(o)), n = (0 < i.length && (s.style = i), 
        []);
        return n.push({
            tag: "span",
            attributes: s,
            children: [ t ]
        }), r && n.push({
            tag: "span",
            attributes: {
                class: "sr-only"
            },
            children: [ r ]
        }), n;
    }
    let S = Zt.styles;
    function de(t) {
        var e = t[0], a = t[1], [ t ] = t.slice(4);
        let n = null;
        return {
            found: !0,
            width: e,
            height: a,
            icon: n = Array.isArray(t) ? {
                tag: "g",
                attributes: {
                    class: "".concat(k.cssPrefix, "-").concat(o.GROUP)
                },
                children: [ {
                    tag: "path",
                    attributes: {
                        class: "".concat(k.cssPrefix, "-").concat(o.SECONDARY),
                        fill: "currentColor",
                        d: t[0]
                    }
                }, {
                    tag: "path",
                    attributes: {
                        class: "".concat(k.cssPrefix, "-").concat(o.PRIMARY),
                        fill: "currentColor",
                        d: t[1]
                    }
                } ]
            } : {
                tag: "path",
                attributes: {
                    fill: "currentColor",
                    d: t
                }
            }
        };
    }
    let gt = {
        found: !1,
        width: 512,
        height: 512
    };
    function me(r, i) {
        let o = i;
        return "fa" === i && null !== k.styleDefault && (i = h), new Promise((t, e) => {
            var a, n;
            if ("fa" === o && (a = ze(r) || {}, r = a.iconName || r, i = a.prefix || i), 
            r && i && S[i] && S[i][r]) return t(de(S[i][r]));
            a = r, n = i, c || k.showMissingIcons || !a || console.error('Icon with name "'.concat(a, '" and prefix "').concat(n, '" is missing.')), 
            t(zt(zt({}, gt), {}, {
                icon: k.showMissingIcons && r && le("missingIconAbstract") || {}
            }));
        });
    }
    Lt = () => {};
    let C = k.measurePerformance && Ft && Ft.mark && Ft.measure ? Ft : {
        mark: Lt,
        measure: Lt
    }, E = 'FA "6.7.1"', bt = t => {
        C.mark("".concat(E, " ").concat(t, " ends")), C.measure("".concat(E, " ").concat(t), "".concat(E, " ").concat(t, " begins"), "".concat(E, " ").concat(t, " ends"));
    };
    var De = {
        begin: t => (C.mark("".concat(E, " ").concat(t, " begins")), () => bt(t)),
        end: bt
    };
    let M = () => {};
    function Re(t) {
        return "string" == typeof (t.getAttribute ? t.getAttribute(b) : null);
    }
    function Le(e, t) {
        let {
            ceFn: a = "svg" === e.tag ? function(t) {
                return g.createElementNS("http://www.w3.org/2000/svg", t);
            } : function(t) {
                return g.createElement(t);
            }
        } = 1 < arguments.length && void 0 !== t ? t : {};
        if ("string" == typeof e) return g.createTextNode(e);
        let n = a(e.tag);
        return Object.keys(e.attributes || []).forEach(function(t) {
            n.setAttribute(t, e.attributes[t]);
        }), (e.children || []).forEach(function(t) {
            n.appendChild(Le(t, {
                ceFn: a
            }));
        }), n;
    }
    let j = {
        replace: function(t) {
            let e = t[0];
            e.parentNode && (t[1].forEach(t => {
                e.parentNode.insertBefore(Le(t), e);
            }), null === e.getAttribute(b) && k.keepOriginalSource ? (t = g.createComment((t = e, 
            t = " ".concat(t.outerHTML, " "), "".concat(t, "Font Awesome fontawesome.com "))), 
            e.parentNode.replaceChild(t, e)) : e.remove());
        },
        nest: function(t) {
            var e = t[0], a = t[1];
            if (~Gt(e).indexOf(k.replacementClass)) return j.replace(t);
            let n = new RegExp("".concat(k.cssPrefix, "-.*"));
            delete a[0].attributes.id, a[0].attributes.class && (t = a[0].attributes.class.split(" ").reduce((t, e) => ((e === k.replacementClass || e.match(n) ? t.toSvg : t.toNode).push(e), 
            t), {
                toNode: [],
                toSvg: []
            }), a[0].attributes.class = t.toSvg.join(" "), 0 === t.toNode.length ? e.removeAttribute("class") : e.setAttribute("class", t.toNode.join(" ")));
            t = a.map(t => $t(t)).join("\n");
            e.setAttribute(b, ""), e.innerHTML = t;
        }
    };
    function Te(t) {
        t();
    }
    function Ye(a, t) {
        let n = "function" == typeof t ? t : M;
        if (0 === a.length) n(); else {
            let t = Te;
            (t = k.mutateApproach === B ? r.requestAnimationFrame || Te : t)(() => {
                var t = !0 !== k.autoReplaceSvg && j[k.autoReplaceSvg] || j.replace, e = De.begin("mutate");
                a.map(t), e(), n();
            });
        }
    }
    let z = !1;
    function We() {
        z = !0;
    }
    function He() {
        z = !1;
    }
    let I = null;
    function _e(t) {
        if (!T) return;
        if (!k.observeMutations) return;
        let {
            treeCallback: r = M,
            nodeCallback: i = M,
            pseudoElementsCallback: o = M,
            observeMutationsRoot: e = g
        } = t;
        I = new T(t => {
            if (!z) {
                let n = h;
                Vt(t).forEach(t => {
                    var e, a;
                    "childList" === t.type && 0 < t.addedNodes.length && !Re(t.addedNodes[0]) && (k.searchPseudoElements && o(t.target), 
                    r(t.target)), "attributes" === t.type && t.target.parentNode && k.searchPseudoElements && o(t.target.parentNode), 
                    "attributes" === t.type && Re(t.target) && ~Q.indexOf(t.attributeName) && ("class" === t.attributeName && (e = t.target, 
                    a = e.getAttribute ? e.getAttribute(y) : null, e = e.getAttribute ? e.getAttribute(x) : null, 
                    a) && e ? ({
                        prefix: a,
                        iconName: e
                    } = ie(Gt(t.target)), t.target.setAttribute(y, a || n), e && t.target.setAttribute(x, e)) : (a = t.target) && a.classList && a.classList.contains && a.classList.contains(k.replacementClass) && i(t.target));
                });
            }
        }), f && I.observe(e, {
            childList: !0,
            attributes: !0,
            characterData: !0,
            subtree: !0
        });
    }
    function Ue(t) {
        var e = t.getAttribute("data-prefix"), a = t.getAttribute("data-icon"), n = void 0 !== t.innerText ? t.innerText.trim() : "", r = ie(Gt(t));
        return r.prefix || (r.prefix = h), e && a && (r.prefix = e, r.iconName = a), 
        r.iconName && r.prefix || (r.prefix && 0 < n.length && (r.iconName = (e = r.prefix, 
        a = t.innerText, (ot[e] || {})[a] || ae(r.prefix, Ee(t.innerText)))), !r.iconName && k.autoFetchSvg && t.firstChild && t.firstChild.nodeType === Node.TEXT_NODE && (r.iconName = t.firstChild.data)), 
        r;
    }
    function Be(t, e) {
        var e = 1 < arguments.length && void 0 !== e ? e : {
            styleParser: !0
        }, {
            iconName: a,
            prefix: n,
            rest: r
        } = Ue(t), i = (s = Vt((o = t).attributes).reduce((t, e) => ("class" !== t.name && "style" !== t.name && (t[e.name] = e.value), 
        t), {}), i = o.getAttribute("title"), o = o.getAttribute("data-fa-title-id"), 
        k.autoA11y && (i ? s["aria-labelledby"] = "".concat(k.replacementClass, "-title-").concat(o || qt()) : (s["aria-hidden"] = "true", 
        s.focusable = "false")), s), o = oe("parseNodeAttributes", {}, t), s = e.styleParser ? (t => {
            t = t.getAttribute("style");
            let e = [];
            return e = t ? t.split(";").reduce((t, e) => {
                var e = e.split(":"), a = e[0], e = e.slice(1);
                return a && 0 < e.length && (t[a] = e.join(":").trim()), t;
            }, {}) : e;
        })(t) : [];
        return zt({
            iconName: a,
            title: t.getAttribute("title"),
            titleId: t.getAttribute("data-fa-title-id"),
            prefix: n,
            transform: w,
            mask: {
                iconName: null,
                prefix: null,
                rest: []
            },
            maskId: null,
            symbol: !1,
            extra: {
                classes: r,
                styles: s,
                attributes: i
            }
        }, o);
    }
    let vt = Zt.styles;
    function Xe(t) {
        var e = "nest" === k.autoReplaceSvg ? Be(t, {
            styleParser: !1
        }) : Be(t);
        return ~e.extra.classes.indexOf(K) ? le("generateLayersText", t, e) : le("generateSvgReplacementMutation", t, e);
    }
    function qe(t) {
        let n = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : null;
        if (!f) return Promise.resolve();
        let e = g.documentElement.classList, r = t => e.add("".concat(U, "-").concat(t)), i = t => e.remove("".concat(U, "-").concat(t));
        var a = k.autoFetchSvg ? [ ...ye, ..._t ] : ge.concat(Object.keys(vt)), a = (a.includes("fa") || a.push("fa"), 
        [ ".".concat(K, ":not([").concat(b, "])") ].concat(a.map(t => ".".concat(t, ":not([").concat(b, "])"))).join(", "));
        if (0 === a.length) return Promise.resolve();
        let o = [];
        try {
            o = Vt(t.querySelectorAll(a));
        } catch (t) {}
        if (!(0 < o.length)) return Promise.resolve();
        r("pending"), i("complete");
        let s = De.begin("onTree"), l = o.reduce((t, e) => {
            try {
                var a = Xe(e);
                a && t.push(a);
            } catch (t) {
                c || "MissingIcon" === t.name && console.error(t);
            }
            return t;
        }, []);
        return new Promise((e, a) => {
            Promise.all(l).then(t => {
                Ye(t, () => {
                    r("active"), r("complete"), i("pending"), "function" == typeof n && n(), 
                    s(), e();
                });
            }).catch(t => {
                s(), a(t);
            });
        });
    }
    function Ve(t) {
        let e = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : null;
        Xe(t).then(t => {
            t && Ye([ t ], e);
        });
    }
    function Ge(n) {
        let r = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : {}, {
            transform: i = w,
            symbol: o = !1,
            mask: s = null,
            maskId: l = null,
            title: f = null,
            titleId: c = null,
            classes: u = [],
            attributes: d = {},
            styles: m = {}
        } = r;
        if (n) {
            let {
                prefix: t,
                iconName: e,
                icon: a
            } = n;
            return ce(zt({
                type: "icon"
            }, n), () => (se("beforeDOMElementCreation", {
                iconDefinition: n,
                params: r
            }), k.autoA11y && (f ? d["aria-labelledby"] = "".concat(k.replacementClass, "-title-").concat(c || qt()) : (d["aria-hidden"] = "true", 
            d.focusable = "false")), ue({
                icons: {
                    main: de(a),
                    mask: s ? de(s.icon) : {
                        found: !1,
                        width: null,
                        height: null,
                        icon: {}
                    }
                },
                prefix: t,
                iconName: e,
                transform: zt(zt({}, w), i),
                symbol: o,
                title: f,
                maskId: l,
                titleId: c,
                extra: {
                    attributes: d,
                    styles: m,
                    classes: u
                }
            })));
        }
    }
    let yt = {
        mixout() {
            return {
                icon: (n = Ge, function(t) {
                    var e = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : {}, t = (t || {}).icon ? t : fe(t || {});
                    let a = e.mask;
                    return a = a && ((a || {}).icon ? a : fe(a || {})), n(t, zt(zt({}, e), {}, {
                        mask: a
                    }));
                })
            };
            var n;
        },
        hooks() {
            return {
                mutationObserverCallbacks(t) {
                    return t.treeCallback = qe, t.nodeCallback = Ve, t;
                }
            };
        },
        provides(t) {
            t.i2svg = function(t) {
                var {
                    node: t = g,
                    callback: e = () => {}
                } = t;
                return qe(t, e);
            }, t.generateSvgReplacementMutation = function(n, t) {
                let {
                    iconName: r,
                    title: i,
                    titleId: o,
                    prefix: s,
                    transform: l,
                    symbol: f,
                    mask: e,
                    maskId: c,
                    extra: u
                } = t;
                return new Promise((a, t) => {
                    Promise.all([ me(r, s), e.iconName ? me(e.iconName, e.prefix) : Promise.resolve({
                        found: !1,
                        width: 512,
                        height: 512,
                        icon: {}
                    }) ]).then(t => {
                        var [ t, e ] = t;
                        a([ n, ue({
                            icons: {
                                main: t,
                                mask: e
                            },
                            prefix: s,
                            iconName: r,
                            transform: l,
                            symbol: f,
                            maskId: c,
                            title: i,
                            titleId: o,
                            extra: u,
                            watchable: !0
                        }) ]);
                    }).catch(t);
                });
            }, t.generateAbstractIcon = function(t) {
                var {
                    children: t,
                    attributes: e,
                    main: a,
                    transform: n,
                    styles: r
                } = t, r = Kt(r);
                0 < r.length && (e.style = r);
                let i;
                return Jt(n) && (i = le("generateAbstractTransformGrouping", {
                    main: a,
                    transform: n,
                    containerWidth: a.width,
                    iconWidth: a.width
                })), t.push(i || a.icon), {
                    children: t,
                    attributes: e
                };
            };
        }
    }, xt = {
        mixout() {
            return {
                layer(t) {
                    let a = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : {}, {
                        classes: n = []
                    } = a;
                    return ce({
                        type: "layer"
                    }, () => {
                        se("beforeDOMElementCreation", {
                            assembler: t,
                            params: a
                        });
                        let e = [];
                        return t(t => {
                            Array.isArray(t) ? t.map(t => {
                                e = e.concat(t.abstract);
                            }) : e = e.concat(t.abstract);
                        }), [ {
                            tag: "span",
                            attributes: {
                                class: [ "".concat(k.cssPrefix, "-layers"), ...n ].join(" ")
                            },
                            children: e
                        } ];
                    });
                }
            };
        }
    }, kt = {
        mixout() {
            return {
                counter(r) {
                    let i = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : {}, {
                        title: o = null,
                        classes: s = [],
                        attributes: l = {},
                        styles: f = {}
                    } = i;
                    return ce({
                        type: "counter",
                        content: r
                    }, () => {
                        se("beforeDOMElementCreation", {
                            content: r,
                            params: i
                        });
                        var {
                            content: t,
                            title: e,
                            extra: a
                        } = t = {
                            content: r.toString(),
                            title: o,
                            extra: {
                                attributes: l,
                                styles: f,
                                classes: [ "".concat(k.cssPrefix, "-layers-counter"), ...s ]
                            }
                        }, n = zt(zt(zt({}, a.attributes), e ? {
                            title: e
                        } : {}), {}, {
                            class: a.classes.join(" ")
                        });
                        return 0 < (a = Kt(a.styles)).length && (n.style = a), (a = []).push({
                            tag: "span",
                            attributes: n,
                            children: [ t ]
                        }), e && a.push({
                            tag: "span",
                            attributes: {
                                class: "sr-only"
                            },
                            children: [ e ]
                        }), a;
                    });
                }
            };
        }
    }, wt = {
        mixout() {
            return {
                text(t) {
                    let e = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : {}, {
                        transform: a = w,
                        title: n = null,
                        classes: r = [],
                        attributes: i = {},
                        styles: o = {}
                    } = e;
                    return ce({
                        type: "text",
                        content: t
                    }, () => (se("beforeDOMElementCreation", {
                        content: t,
                        params: e
                    }), Fe({
                        content: t,
                        transform: zt(zt({}, w), a),
                        title: n,
                        extra: {
                            attributes: i,
                            styles: o,
                            classes: [ "".concat(k.cssPrefix, "-layers-text"), ...r ]
                        }
                    })));
                }
            };
        },
        provides(t) {
            t.generateLayersText = function(t, e) {
                var a, n, {
                    title: e,
                    transform: r,
                    extra: i
                } = e;
                let o = null, s = null;
                return W && (a = parseInt(getComputedStyle(t).fontSize, 10), n = t.getBoundingClientRect(), 
                o = n.width / a, s = n.height / a), k.autoA11y && !e && (i.attributes["aria-hidden"] = "true"), 
                Promise.resolve([ t, Fe({
                    content: t.innerHTML,
                    width: o,
                    height: s,
                    transform: r,
                    title: e,
                    extra: i,
                    watchable: !0
                }) ]);
            };
        }
    }, At = new RegExp('"', "ug"), Pt = [ 1105920, 1112319 ], Ot = zt(zt(zt(zt({}, {
        FontAwesome: {
            normal: "fas",
            400: "fas"
        }
    }), {
        "Font Awesome 6 Free": {
            900: "fas",
            400: "far"
        },
        "Font Awesome 6 Pro": {
            900: "fas",
            400: "far",
            normal: "far",
            300: "fal",
            100: "fat"
        },
        "Font Awesome 6 Brands": {
            400: "fab",
            normal: "fab"
        },
        "Font Awesome 6 Duotone": {
            900: "fad",
            400: "fadr",
            normal: "fadr",
            300: "fadl",
            100: "fadt"
        },
        "Font Awesome 6 Sharp": {
            900: "fass",
            400: "fasr",
            normal: "fasr",
            300: "fasl",
            100: "fast"
        },
        "Font Awesome 6 Sharp Duotone": {
            900: "fasds",
            400: "fasdr",
            normal: "fasdr",
            300: "fasdl",
            100: "fasdt"
        }
    }), {
        "Font Awesome 5 Free": {
            900: "fas",
            400: "far"
        },
        "Font Awesome 5 Pro": {
            900: "fas",
            400: "far",
            normal: "far",
            300: "fal"
        },
        "Font Awesome 5 Brands": {
            400: "fab",
            normal: "fab"
        },
        "Font Awesome 5 Duotone": {
            900: "fad"
        }
    }), {
        "Font Awesome Kit": {
            400: "fak",
            normal: "fak"
        },
        "Font Awesome Kit Duotone": {
            400: "fakd",
            normal: "fakd"
        }
    }), F = Object.keys(Ot).reduce((t, e) => (t[e.toLowerCase()] = Ot[e], t), {}), Nt = Object.keys(F).reduce((t, e) => {
        var a = F[e];
        return t[e] = a[900] || [ ...Object.entries(a) ][0][1], t;
    }, {});
    function Ke(m, h) {
        let p = "".concat(_).concat(h.replace(":", "-"));
        return new Promise((o, s) => {
            if (null !== m.getAttribute(p)) return o();
            var a, l = Vt(m.children).filter(t => t.getAttribute(v) === h)[0], n = r.getComputedStyle(m, h), f = n.getPropertyValue("font-family"), c = f.match(J), u = n.getPropertyValue("font-weight");
            let t = n.getPropertyValue("content");
            if (l && !c) return m.removeChild(l), o();
            if (c && "none" !== t && "" !== t) {
                let t = n.getPropertyValue("content"), r = (n = u, u = (u = f).replace(/^['"]|['"]$/g, "").toLowerCase(), 
                n = parseInt(n), n = isNaN(n) ? "normal" : n, (F[u] || {})[n] || Nt[u]);
                f = (f = t).replace(At, ""), n = 0, a = (u = f).length, u = 55296 <= (d = u.charCodeAt(n)) && d <= 56319 && n + 1 < a && 56320 <= (a = u.charCodeAt(n + 1)) && a <= 57343 ? 1024 * (d - 55296) + a - 56320 + 65536 : d, 
                n = u >= Pt[0] && u <= Pt[1];
                var {
                    value: d,
                    isSecondary: u
                } = {
                    value: Ee((a = 2 === f.length && f[0] === f[1]) ? f[0] : f),
                    isSecondary: n || a
                }, f = c[0].startsWith("FontAwesome");
                let e = ae(r, d), i = e;
                if (f && (n = d, a = lt[n], n = ae("fas", n), (c = a || (n ? {
                    prefix: "fas",
                    iconName: n
                } : null) || {
                    prefix: null,
                    iconName: null
                }).iconName) && c.prefix && (e = c.iconName, r = c.prefix), !e || u || l && l.getAttribute(y) === r && l.getAttribute(x) === i) o(); else {
                    m.setAttribute(p, i), l && m.removeChild(l);
                    let a = {
                        iconName: null,
                        title: null,
                        titleId: null,
                        prefix: null,
                        transform: w,
                        symbol: !1,
                        mask: {
                            iconName: null,
                            prefix: null,
                            rest: []
                        },
                        maskId: null,
                        extra: {
                            classes: [],
                            styles: {},
                            attributes: {}
                        }
                    }, n = a.extra;
                    n.attributes[v] = h, me(e, r).then(t => {
                        var t = ue(zt(zt({}, a), {}, {
                            icons: {
                                main: t,
                                mask: ct()
                            },
                            prefix: r,
                            iconName: i,
                            extra: n,
                            watchable: !0
                        })), e = g.createElementNS("http://www.w3.org/2000/svg", "svg");
                        "::before" === h ? m.insertBefore(e, m.firstChild) : m.appendChild(e), 
                        e.outerHTML = t.map(t => $t(t)).join("\n"), m.removeAttribute(p), 
                        o();
                    }).catch(s);
                }
            } else o();
        });
    }
    function Je(t) {
        return Promise.all([ Ke(t, "::before"), Ke(t, "::after") ]);
    }
    function Qe(t) {
        return !(t.parentNode === document.head || ~X.indexOf(t.tagName.toUpperCase()) || t.getAttribute(v) || t.parentNode && "svg" === t.parentNode.tagName);
    }
    function Ze(r) {
        if (f) return new Promise((t, e) => {
            var a = Vt(r.querySelectorAll("*")).filter(Qe).map(Je);
            let n = De.begin("searchPseudoElements");
            We(), Promise.all(a).then(() => {
                n(), He(), t();
            }).catch(() => {
                n(), He(), e();
            });
        });
    }
    let St = {
        hooks() {
            return {
                mutationObserverCallbacks(t) {
                    return t.pseudoElementsCallback = Ze, t;
                }
            };
        },
        provides(t) {
            t.pseudoElements2svg = function(t) {
                var {
                    node: t = g
                } = t;
                k.searchPseudoElements && Ze(t);
            };
        }
    }, Ct = !1, Et = {
        mixout() {
            return {
                dom: {
                    unwatch() {
                        We(), Ct = !0;
                    }
                }
            };
        },
        hooks() {
            return {
                bootstrap() {
                    _e(oe("mutationObserverCallbacks", {}));
                },
                noAuto() {
                    I && I.disconnect();
                },
                watch(t) {
                    t = t.observeMutationsRoot;
                    Ct ? He() : _e(oe("mutationObserverCallbacks", {
                        observeMutationsRoot: t
                    }));
                }
            };
        }
    }, Mt = t => t.toLowerCase().split(" ").reduce((t, e) => {
        var e = e.toLowerCase().split("-"), a = e[0], n = e.slice(1).join("-");
        if (a && "h" === n) t.flipX = !0; else if (a && "v" === n) t.flipY = !0; else if (n = parseFloat(n), 
        !isNaN(n)) switch (a) {
          case "grow":
            t.size = t.size + n;
            break;

          case "shrink":
            t.size = t.size - n;
            break;

          case "left":
            t.x = t.x - n;
            break;

          case "right":
            t.x = t.x + n;
            break;

          case "up":
            t.y = t.y - n;
            break;

          case "down":
            t.y = t.y + n;
            break;

          case "rotate":
            t.rotate = t.rotate + n;
        }
        return t;
    }, {
        size: 16,
        x: 0,
        y: 0,
        flipX: !1,
        flipY: !1,
        rotate: 0
    }), jt = {
        mixout() {
            return {
                parse: {
                    transform: t => Mt(t)
                }
            };
        },
        hooks() {
            return {
                parseNodeAttributes(t, e) {
                    e = e.getAttribute("data-fa-transform");
                    return e && (t.transform = Mt(e)), t;
                }
            };
        },
        provides(t) {
            t.generateAbstractTransformGrouping = function(t) {
                var {
                    main: t,
                    transform: e,
                    containerWidth: a,
                    iconWidth: n
                } = t, a = {
                    transform: "translate(".concat(a / 2, " 256)")
                }, r = "translate(".concat(32 * e.x, ", ").concat(32 * e.y, ") "), i = "scale(".concat(e.size / 16 * (e.flipX ? -1 : 1), ", ").concat(e.size / 16 * (e.flipY ? -1 : 1), ") "), e = "rotate(".concat(e.rotate, " 0 0)"), a = {
                    outer: a,
                    inner: {
                        transform: "".concat(r, " ").concat(i, " ").concat(e)
                    },
                    path: {
                        transform: "translate(".concat(n / 2 * -1, " -256)")
                    }
                };
                return {
                    tag: "g",
                    attributes: zt({}, a.outer),
                    children: [ {
                        tag: "g",
                        attributes: zt({}, a.inner),
                        children: [ {
                            tag: t.icon.tag,
                            children: t.icon.children,
                            attributes: zt(zt({}, t.icon.attributes), a.path)
                        } ]
                    } ]
                };
            };
        }
    }, D = {
        x: 0,
        y: 0,
        width: "100%",
        height: "100%"
    };
    function $e(t) {
        return t.attributes && (t.attributes.fill || (!(1 < arguments.length && void 0 !== arguments[1]) || arguments[1])) && (t.attributes.fill = "black"), 
        t;
    }
    Tt = [ ke, yt, xt, kt, wt, St, Et, jt, {
        hooks() {
            return {
                parseNodeAttributes(t, e) {
                    var a = e.getAttribute("data-fa-mask"), a = a ? ie(a.split(" ").map(t => t.trim())) : ct();
                    return a.prefix || (a.prefix = h), t.mask = a, t.maskId = e.getAttribute("data-fa-mask-id"), 
                    t;
                }
            };
        },
        provides(t) {
            t.generateAbstractMask = function(t) {
                var {
                    children: t,
                    attributes: e,
                    main: a,
                    mask: n,
                    maskId: r,
                    transform: i
                } = t, {
                    width: a,
                    icon: o
                } = a, {
                    width: n,
                    icon: s
                } = n, i = (t => {
                    var {
                        transform: t,
                        containerWidth: e,
                        iconWidth: a
                    } = t, e = {
                        transform: "translate(".concat(e / 2, " 256)")
                    }, n = "translate(".concat(32 * t.x, ", ").concat(32 * t.y, ") "), r = "scale(".concat(t.size / 16 * (t.flipX ? -1 : 1), ", ").concat(t.size / 16 * (t.flipY ? -1 : 1), ") "), t = "rotate(".concat(t.rotate, " 0 0)");
                    return {
                        outer: e,
                        inner: {
                            transform: "".concat(n, " ").concat(r, " ").concat(t)
                        },
                        path: {
                            transform: "translate(".concat(a / 2 * -1, " -256)")
                        }
                    };
                })({
                    transform: i,
                    containerWidth: n,
                    iconWidth: a
                }), n = {
                    tag: "rect",
                    attributes: zt(zt({}, D), {}, {
                        fill: "white"
                    })
                }, a = o.children ? {
                    children: o.children.map($e)
                } : {}, o = {
                    tag: "g",
                    attributes: zt({}, i.inner),
                    children: [ $e(zt({
                        tag: o.tag,
                        attributes: zt(zt({}, o.attributes), i.path)
                    }, a)) ]
                }, a = {
                    tag: "g",
                    attributes: zt({}, i.outer),
                    children: [ o ]
                }, i = "mask-".concat(r || qt()), o = "clip-".concat(r || qt()), r = {
                    tag: "mask",
                    attributes: zt(zt({}, D), {}, {
                        id: i,
                        maskUnits: "userSpaceOnUse",
                        maskContentUnits: "userSpaceOnUse"
                    }),
                    children: [ n, a ]
                }, a = {
                    tag: "defs",
                    children: [ {
                        tag: "clipPath",
                        attributes: {
                            id: o
                        },
                        children: "g" === (n = s).tag ? n.children : [ n ]
                    }, r ]
                };
                return t.push(a, {
                    tag: "rect",
                    attributes: zt({
                        fill: "currentColor",
                        "clip-path": "url(#".concat(o, ")"),
                        mask: "url(#".concat(i, ")")
                    }, D)
                }), {
                    children: t,
                    attributes: e
                };
            };
        }
    }, {
        provides(t) {
            let i = !1;
            r.matchMedia && (i = r.matchMedia("(prefers-reduced-motion: reduce)").matches), 
            t.missingIconAbstract = function() {
                var t = [], e = {
                    fill: "currentColor"
                }, a = {
                    attributeType: "XML",
                    repeatCount: "indefinite",
                    dur: "2s"
                }, n = (t.push({
                    tag: "path",
                    attributes: zt(zt({}, e), {}, {
                        d: "M156.5,447.7l-12.6,29.5c-18.7-9.5-35.9-21.2-51.5-34.9l22.7-22.7C127.6,430.5,141.5,440,156.5,447.7z M40.6,272H8.5 c1.4,21.2,5.4,41.7,11.7,61.1L50,321.2C45.1,305.5,41.8,289,40.6,272z M40.6,240c1.4-18.8,5.2-37,11.1-54.1l-29.5-12.6 C14.7,194.3,10,216.7,8.5,240H40.6z M64.3,156.5c7.8-14.9,17.2-28.8,28.1-41.5L69.7,92.3c-13.7,15.6-25.5,32.8-34.9,51.5 L64.3,156.5z M397,419.6c-13.9,12-29.4,22.3-46.1,30.4l11.9,29.8c20.7-9.9,39.8-22.6,56.9-37.6L397,419.6z M115,92.4 c13.9-12,29.4-22.3,46.1-30.4l-11.9-29.8c-20.7,9.9-39.8,22.6-56.8,37.6L115,92.4z M447.7,355.5c-7.8,14.9-17.2,28.8-28.1,41.5 l22.7,22.7c13.7-15.6,25.5-32.9,34.9-51.5L447.7,355.5z M471.4,272c-1.4,18.8-5.2,37-11.1,54.1l29.5,12.6 c7.5-21.1,12.2-43.5,13.6-66.8H471.4z M321.2,462c-15.7,5-32.2,8.2-49.2,9.4v32.1c21.2-1.4,41.7-5.4,61.1-11.7L321.2,462z M240,471.4c-18.8-1.4-37-5.2-54.1-11.1l-12.6,29.5c21.1,7.5,43.5,12.2,66.8,13.6V471.4z M462,190.8c5,15.7,8.2,32.2,9.4,49.2h32.1 c-1.4-21.2-5.4-41.7-11.7-61.1L462,190.8z M92.4,397c-12-13.9-22.3-29.4-30.4-46.1l-29.8,11.9c9.9,20.7,22.6,39.8,37.6,56.9 L92.4,397z M272,40.6c18.8,1.4,36.9,5.2,54.1,11.1l12.6-29.5C317.7,14.7,295.3,10,272,8.5V40.6z M190.8,50 c15.7-5,32.2-8.2,49.2-9.4V8.5c-21.2,1.4-41.7,5.4-61.1,11.7L190.8,50z M442.3,92.3L419.6,115c12,13.9,22.3,29.4,30.5,46.1 l29.8-11.9C470,128.5,457.3,109.4,442.3,92.3z M397,92.4l22.7-22.7c-15.6-13.7-32.8-25.5-51.5-34.9l-12.6,29.5 C370.4,72.1,384.4,81.5,397,92.4z"
                    })
                }), zt(zt({}, a), {}, {
                    attributeName: "opacity"
                })), r = {
                    tag: "circle",
                    attributes: zt(zt({}, e), {}, {
                        cx: "256",
                        cy: "364",
                        r: "28"
                    }),
                    children: []
                };
                return i || r.children.push({
                    tag: "animate",
                    attributes: zt(zt({}, a), {}, {
                        attributeName: "r",
                        values: "28;14;28;28;14;28;"
                    })
                }, {
                    tag: "animate",
                    attributes: zt(zt({}, n), {}, {
                        values: "1;0;1;1;0;1;"
                    })
                }), t.push(r), t.push({
                    tag: "path",
                    attributes: zt(zt({}, e), {}, {
                        opacity: "1",
                        d: "M263.7,312h-16c-6.6,0-12-5.4-12-12c0-71,77.4-63.9,77.4-107.8c0-20-17.8-40.2-57.4-40.2c-29.1,0-44.3,9.6-59.2,28.7 c-3.9,5-11.1,6-16.2,2.4l-13.1-9.2c-5.6-3.9-6.9-11.8-2.6-17.2c21.2-27.2,46.4-44.7,91.2-44.7c52.3,0,97.4,29.8,97.4,80.2 c0,67.6-77.4,63.5-77.4,107.8C275.7,306.6,270.3,312,263.7,312z"
                    }),
                    children: i ? [] : [ {
                        tag: "animate",
                        attributes: zt(zt({}, n), {}, {
                            values: "1;0;0;0;0;1;"
                        })
                    } ]
                }), i || t.push({
                    tag: "path",
                    attributes: zt(zt({}, e), {}, {
                        opacity: "0",
                        d: "M232.5,134.5l7,168c0.3,6.4,5.6,11.5,12,11.5h9c6.4,0,11.7-5.1,12-11.5l7-168c0.3-6.8-5.2-12.5-12-12.5h-23 C237.7,122,232.2,127.7,232.5,134.5z"
                    }),
                    children: [ {
                        tag: "animate",
                        attributes: zt(zt({}, n), {}, {
                            values: "0;0;1;1;0;0;"
                        })
                    } ]
                }), {
                    tag: "g",
                    attributes: {
                        class: "missing"
                    },
                    children: t
                };
            };
        }
    }, {
        hooks() {
            return {
                parseNodeAttributes(t, e) {
                    e = e.getAttribute("data-fa-symbol");
                    return t.symbol = null !== e && ("" === e || e), t;
                }
            };
        }
    } ];
    {
        Wt = Tt;
        let n = (Ut = {
            mixoutsTo: O
        }).mixoutsTo;
        mt = Wt, A = {}, Object.keys(P).forEach(t => {
            -1 === ht.indexOf(t) && delete P[t];
        }), mt.forEach(t => {
            let a = t.mixout ? t.mixout() : {};
            if (Object.keys(a).forEach(e => {
                "function" == typeof a[e] && (n[e] = a[e]), "object" == typeof a[e] && Object.keys(a[e]).forEach(t => {
                    n[e] || (n[e] = {}), n[e][t] = a[e][t];
                });
            }), t.hooks) {
                let e = t.hooks();
                Object.keys(e).forEach(t => {
                    A[t] || (A[t] = []), A[t].push(e[t]);
                });
            }
            t.provides && t.provides(P);
        }), n;
    }
    !function(t) {
        try {
            for (var e = arguments.length, a = new Array(1 < e ? e - 1 : 0), n = 1; n < e; n++) a[n - 1] = arguments[n];
            t(...a);
        } catch (t) {
            if (!c) throw t;
        }
    }(function(t) {
        Y && (r.FontAwesome || (r.FontAwesome = O), Ne(() => {
            N(), se("bootstrap");
        })), Zt.hooks = zt(zt({}, Zt.hooks), {}, {
            addPack: (t, e) => {
                Zt.styles[t] = zt(zt({}, Zt.styles[t] || {}), e), p(), N();
            },
            addPacks: t => {
                t.forEach(t => {
                    var [ t, e ] = t;
                    Zt.styles[t] = zt(zt({}, Zt.styles[t] || {}), e);
                }), p(), N();
            },
            addShims: t => {
                Zt.shims.push(...t), p(), N();
            }
        });
    });
}